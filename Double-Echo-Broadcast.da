import sys
import da
import math

class DoubleEchoBroadcast(process):
	
	def setup(processes:set, n:int, f:int, sender:da.common.ProcessId, msg:str = ''):
		self.sentecho = False
		self.sentready = False
		self.delivered = False
		self.echos = dict((p,False) for p in processes)
		self.readys = dict((p,False) for p in processes)
		self.is_sender = True if sender == self else False
		
		if self.is_sender:
			broadcast()
		
	
	def broadcast():
		# TODO ADD HMAC COMPUTATION TO GUARANTEE AUTHENTICITY
		#proc = next(iter(processes))
		proc_to_list = list(processes)
		proc = proc_to_list[1]
		
		byzantine_message='Altered message'
		
		print(proc,sender)
		# Send an altered message to the first process and then
		# send the correct message to other process
		
		if proc != sender:
			send(('SEND',byzantine_message),to=proc)
		send(('SEND',msg),to=processes-{proc})
		
	
	def receive(msg=('SEND',m),from_=p):
		if not self.sentecho and sender == p: 
			self.sentecho = True
			print(self,'I received:',m,'From:',p)
			send(('ECHO',m), to=processes)
	
	def receive(msg=('ECHO',m), from_=p):
		if not self.echos[p]:	
			self.echos[p] = m
			
			check_echos()	
			
	def check_echos():
		
		if some(m in self.echos.values(),has = (len(setof(p,p in processes, self.echos[p] == m)) >  math.floor((n+f)/2)) ) and not self.sentready and m != False:	
			self.sentready = True
			send(('READY',m), to=processes)
	
	def receive(msg=('READY',m), from_=p):
		if not self.readys[p]:	
			self.readys[p] = m
			check_readys()
			check_to_deliver()
	
	def check_readys():
		if some(m in self.readys.values(),has = (len(setof(p,p in processes, self.readys[p] == m)) > f )) and not self.sentready and m != False:	
			self.sentready = True
			send(('READY',m), to=processes)
			
			
	
	def check_to_deliver():
		if some(m in self.readys.values(),has = (len(setof(p,p in processes, self.readys[p] == m)) > 2 * f) )  and not self.delivered and m != False:	
			self.delivered = True
			print(self,'Message delivered: ',m)	

	def run():
		await(False)

def main():

	if len(sys.argv) != 4:
		print('usage: python3.7 -m da -i Double-Echo-Broadcast.da <num of processes> <num of byzantine> <message to send>')
		exit(0)
	else:
		n_proc = int(sys.argv[1]) if int(sys.argv[2]) > 3 else 4 
		n_byz = int(sys.argv[2]) if int(sys.argv[2]) <= n_proc/3  else (n_proc/3 - 1)
		message = str(sys.argv[3]) 
		
	config(channel={'reliable','fifo'})
	
	ps = new(DoubleEchoBroadcast, num = n_proc)
	ps_without_sender = ps.copy()
	sender = ps_without_sender.pop()	
	setup(ps_without_sender, (ps,n_proc,n_byz,sender))
	setup(sender,(ps, n_proc, n_byz, sender,message))
	start(ps)
	
	

    
    
    
